// Mocks generated by Mockito 5.0.2 from annotations
// in trip_planner/test/data/trip/trip_database_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_planner/data/trip/trip.dart' as _i2;
import 'package:trip_planner/data/trip/trip_dao.dart' as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeTrip extends _i1.Fake implements _i2.Trip {}

/// A class which mocks [TripDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockTripDao extends _i1.Mock implements _i3.TripDao {
  MockTripDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Trip>> findAll() => (super.noSuchMethod(
      Invocation.method(#findAll, []),
      returnValue: Future.value(<_i2.Trip>[])) as _i4.Future<List<_i2.Trip>>);
  @override
  _i4.Future<_i2.Trip?> findById(int? tripId) =>
      (super.noSuchMethod(Invocation.method(#findById, [tripId]),
          returnValue: Future.value(_FakeTrip())) as _i4.Future<_i2.Trip?>);
  @override
  _i4.Future<void> create(_i2.Trip? trip) =>
      (super.noSuchMethod(Invocation.method(#create, [trip]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> update(_i2.Trip? trip) =>
      (super.noSuchMethod(Invocation.method(#update, [trip]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> removeById(int? tripId) =>
      (super.noSuchMethod(Invocation.method(#removeById, [tripId]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
}
