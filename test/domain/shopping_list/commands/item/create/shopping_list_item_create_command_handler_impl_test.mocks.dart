// Mocks generated by Mockito 5.0.2 from annotations
// in trip_planner/test/domain/shopping_list/commands/item/create/shopping_list_item_create_command_handler_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:trip_planner/domain/shopping_list/repository/shopping_list_item_model.dart'
    as _i2;
import 'package:trip_planner/domain/shopping_list/repository/shopping_list_repository.dart'
    as _i3;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeShoppingListItemModel extends _i1.Fake
    implements _i2.ShoppingListItemModel {}

/// A class which mocks [ShoppingListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockShoppingListRepository extends _i1.Mock
    implements _i3.ShoppingListRepository {
  MockShoppingListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> create(_i2.ShoppingListItemModel? model) =>
      (super.noSuchMethod(Invocation.method(#create, [model]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> update(_i2.ShoppingListItemModel? model) =>
      (super.noSuchMethod(Invocation.method(#update, [model]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.ShoppingListItemModel?> findById(int? id) =>
      (super.noSuchMethod(Invocation.method(#findById, [id]),
              returnValue: Future.value(_FakeShoppingListItemModel()))
          as _i4.Future<_i2.ShoppingListItemModel?>);
  @override
  _i4.Future<List<_i2.ShoppingListItemModel>> findAllByTripId(int? id) =>
      (super.noSuchMethod(Invocation.method(#findAllByTripId, [id]),
              returnValue: Future.value(<_i2.ShoppingListItemModel>[]))
          as _i4.Future<List<_i2.ShoppingListItemModel>>);
}
